# Use a Node.js base image
FROM node:18-alpine

# Set the working directory
WORKDIR /app

RUN npm install -g pnpm

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

WORKDIR /app/packages/backend

COPY packages/backend/package.json ./

WORKDIR /app/packages/frontend

COPY packages/frontend/package.json ./

RUN --mount=type=cache,target=/app/.pnpm pnpm set store-dir /app/.pnpm && pnpm install --prefer-offline

COPY packages/frontend ./

WORKDIR /app/packages/backend

COPY packages/backend ./

WORKDIR /app/packages/frontend

ARG PUBLIC_MAGIC_PUBLISHABLE_API_KEY
ENV PUBLIC_MAGIC_PUBLISHABLE_API_KEY=$PUBLIC_MAGIC_PUBLISHABLE_API_KEY
ARG PUBLIC_MAIN_PROGRAM_ID
ENV PUBLIC_MAIN_PROGRAM_ID=$PUBLIC_MAIN_PROGRAM_ID
ARG PUBLIC_USDC_MINT_ADDR
ENV PUBLIC_USDC_MINT_ADDR=$PUBLIC_USDC_MINT_ADDR
ARG PUBLIC_FEE_PAYER_KEY
ENV PUBLIC_FEE_PAYER_KEY=$PUBLIC_FEE_PAYER_KEY
ARG PUBLIC_SOLANA_RPC_URL
ENV PUBLIC_SOLANA_RPC_URL=$PUBLIC_SOLANA_RPC_URL
ARG PUBLIC_POLYGON_RPC_URL
ENV PUBLIC_POLYGON_RPC_URL=$PUBLIC_POLYGON_RPC_URL
ARG PUBLIC_TRPC_URL
ENV PUBLIC_TRPC_URL=$PUBLIC_TRPC_URL
ARG PUBLIC_WEB3AUTH_ID
ENV PUBLIC_WEB3AUTH_ID=$PUBLIC_WEB3AUTH_ID
ARG PUBLIC_FAKE_API
ENV PUBLIC_FAKE_API=$PUBLIC_FAKE_API
ARG PUBLIC_INTERNAL_TRPC_URL
ENV PUBLIC_INTERNAL_TRPC_URL=$PUBLIC_INTERNAL_TRPC_URL

RUN NODE_OPTIONS=--max-old-space-size=32768 pnpm run build

CMD ["pnpm", "run", "start"]
